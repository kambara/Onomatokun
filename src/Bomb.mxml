<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="50" height="50">
	<s:layout>
		<s:BasicLayout/>
	</s:layout>
	<fx:Declarations>
		<!-- 非ビジュアルエレメント (サービス、値オブジェクトなど) をここに配置 -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.core.IVisualElementContainer;
			
			import org.libspark.betweenas3.BetweenAS3;
			import org.libspark.betweenas3.easing.Physical;
			import org.libspark.betweenas3.easing.Quad;
			import org.libspark.betweenas3.events.TweenEvent;
			import org.libspark.betweenas3.tweens.ITween;
			
			public static const OUT:String = "out";
			
			public function start(radian:Number):void {
				//this.x = point.x - this.width/2;
				//this.y = point.y - this.height/2;
				
				var tween:ITween;
				if (radian < 0) {
					var dx:Number = 700 * Math.cos(radian);
					var dy:Number = 350 * Math.sin(radian);
					var t:Number = Math.abs(0.6 * Math.cos(radian)) + Math.abs(1 * Math.sin(radian));
					tween = BetweenAS3.serial(
						BetweenAS3.parallel(
							BetweenAS3.to(this, {x: this.x + dx/2}, t),
							BetweenAS3.to(this, {y: this.y + dy}, t, Quad.easeOut)),
						BetweenAS3.parallel(
							BetweenAS3.to(this, {x: this.x + dx + 10}, t),
							BetweenAS3.to(this, {y: 480},  t, Quad.easeIn)));
				} else {
					var dx2:Number = 600 * Math.cos(radian);
					tween = BetweenAS3.parallel(
							BetweenAS3.to(this, {x: this.x + dx2}, 1),
							BetweenAS3.to(this, {y: 480}, 1, Quad.easeIn));
				}
				
				var self:Group = this;
				tween.addEventListener(TweenEvent.COMPLETE, function():void {
					// 外に出たら消す
					dispatchEvent(new Event(Bomb.OUT));
					IVisualElementContainer(parent).removeElement(self);
				});
				tween.play();
				
				var rotTween:ITween = BetweenAS3.tween(container, {rotation: 360}, {rotation: 0}, 2.5);
				rotTween.stopOnComplete = false;
				rotTween.play();
			}
			
			public function get centerX():Number {
				return this.x + this.width/2;
			}
			
			public function get centerY():Number {
				return this.y + this.height/2;
			}
		]]>
	</fx:Script>
	<s:Group id="container" x="25" y="25">
		<mx:Image x="-25" y="-25" source="@Embed('../assets/bomb.png')"/>	
	</s:Group>
</s:Group>
